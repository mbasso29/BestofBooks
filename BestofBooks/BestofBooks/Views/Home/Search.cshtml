@{
    ViewData["Title"] = "Search";
}
@model InventoryListViewModel

<title>@ViewData["Title"] - BestofBooks</title>
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/css/site.css" />
<script src="~/js/site.js"></script>
<script src="~/js/search.js"></script>
<script src="https://kit.fontawesome.com/f9f4cabcd6.js" crossorigin="anonymous"></script>

<div class="container-fluid my-4">
    <div class="text-center">
        <h1 class="text-wrap" style="color: #0429AC">Welcome to Best of Books!</h1>
        <img src="@Url.Content("~/Images/BestofBooks2.png")" class="img-fluid" style="width:13em; padding-bottom:3em" />
        <p style="color: #0429AC">Enter your search parameters below!!</p>
    </div>
</div>
<div class="container text-center" style="padding: .5em 0 .5em 0">
    @*Add functionality to use filter options as parameters and text box as the string*@
    <select name="searchOptions" id="searchOptions" style="background-color:#DBD9CA; text-align:center; height:1.6em; color:#004803">
    <option value="" disabled selected>Select Filter Option</option>
    <option value="">Genre</option>
    <option value="">Author Last Name</option>
    <option value="">Author First Name</option>
    <option value="">Title</option>
    </select>

    <div class="text-body" style="padding: .5em 0 .5em 0">
        <input type="text" id="textFilter" name="Text Filter" maxlength="25" />
    </div>
</div>
<div class="container text-center">
    @*Add functionality to search button to trigger stored procedure based on parameters*@
@*    Fix functionality to clear search parameters after seach button pressed*@    
    <button id="SearchBtn" name="Search" style="color:#004803; border-color:#004803; background-color:#DBD9CA; font-weight:bold">Search</button>
    <button id="ClearBtn" name="Clear" style="color:#004803; border-color:#004803; background-color:#DBD9CA; font-weight:bold">Clear</button>
</div>
<div class="container text-center" style="padding: .5em 0 .5em 0">
     <table class="table-hover table-bordered align-items-center text-center" id="ListTable" cellspacing=5 cellpadding=5 border="1" style="visibility:hidden">
        <tr class="text-center">
            <th>ISBN</th>
            <th>Title</th>
            <th>Author First Name</th>
            <th>Author Last Name</th>
            <th>Genre</th>
            <th>Location</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>In Stock</th>
        </tr>
        @for (var i = 0; i < Model.invListBooks.Count(); i++)
                {
                    <tr>
                        <td>@Model.invListBooks[i].ISBN</td>
                        <td>@Model.invListBooks[i].Title</td>
                        <td>@Model.invListBooks[i].AuthorFirst</td>
                        <td>@Model.invListBooks[i].AuthorLast</td>
                        <td>@Model.invListBooks[i].Genre</td>
                        <td>@Model.invListBooks[i].Location</td>
                        <td>@Model.invListBooks[i].Price.ToString("C")</td>
                        <td>@Model.invListBooks[i].Quantity</td>
                        <td>@Model.invListBooks[i].InStock</td>
                    </tr>
                }
    </table>
</div>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
@section Scripts
{
    @await Html.PartialAsync("_ValidationScriptsPartial")
    @await Html.PartialAsync("Login", model: new AdminModel())
}
